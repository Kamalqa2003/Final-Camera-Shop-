{"ast":null,"code":"var _jsxFileName = \"D:\\\\Desktop\\\\cameras-shop\\\\src\\\\components\\\\Header.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// import React, { useState } from 'react';\n// import { FaShopify } from 'react-icons/fa';\n// import { Link } from 'react-router-dom';\n// import Order from './Order';\n// import About from './About';\n// import Contacts from './Contacts';\n//\n// const ShowOrders = (props) => {\n//     const [formData, setFormData] = useState({\n//         firstName: '',\n//         lastName: '',\n//         contactNumber: '',\n//         email: '',\n//         paymentMethod: 'creditCard', // По умолчанию выбрана кредитная карта\n//     });\n//\n//\n//     const handleInputChange = (e) => {\n//         const { name, value } = e.target;\n//         setFormData({ ...formData, [name]: value });\n//     };\n//\n//     const handlePaymentMethodChange = (e) => {\n//         setFormData({ ...formData, paymentMethod: e.target.value });\n//     };\n//\n//     const handleOrderSubmit = () => {\n//         // Здесь вы можете добавить логику для отправки заказа на сервер\n//         // Например, вызов функции API для обработки заказа\n//         // После успешной отправки, вы можете показать модальное окно с сообщением об успешном заказе\n//         alert('Заказ успешно оформлен. Ожидайте обратной связи от менеджера!');\n//         props.onCloseBuyForm();\n//     };\n//\n//     let summa = 0;\n//     props.orders.forEach((el) => (summa += Number.parseFloat(el.price)));\n//     return (\n//         <div>\n//             {props.orders.map((el) => (\n//                 <Order onDelete={props.onDelete} key={el.id} item={el} />\n//             ))}\n//             <p className='summa'> Сумма: {new Intl.NumberFormat().format(summa)}$ </p>\n//             <button className='buy-button' onClick={props.onBuy}>\n//                 Купить\n//             </button>\n//             {props.buyFormVisible && (\n//                 <div className='about'>\n//                     <div>\n//             <span className='close-icon' onClick={props.onCloseBuyForm}>\n//               &times;\n//             </span>\n//                         <h2>Форма покупки заказа</h2>\n//                         <form>\n//                             <label>\n//                                 Имя:\n//                                 <input type='text' name='firstName' value={formData.firstName} onChange={handleInputChange} />\n//                             </label>\n//                             <label>\n//                                 Фамилия:\n//                                 <input type='text' name='lastName' value={formData.lastName} onChange={handleInputChange} />\n//                             </label>\n//                             <label>\n//                                 Контактный номер:\n//                                 <input type='text' name='contactNumber' value={formData.contactNumber} onChange={handleInputChange} />\n//                             </label>\n//                             <label>\n//                                 Почта:\n//                                 <input type='email' name='email' value={formData.email} onChange={handleInputChange} />\n//                             </label>\n//                             <label>\n//                                 Вид оплаты:\n//                                 <select name='paymentMethod' value={formData.paymentMethod} onChange={handlePaymentMethodChange}>\n//                                     <option value='creditCard'>Кредитная карта</option>\n//                                     <option value='paypal'>PayPal</option>\n//                                     <option value='kaspi'>Kaspi</option>\n//                                     <option value='qiwi'>QIWI</option>\n//                                     <option value='visa'>VISA</option>\n//                                 </select>\n//                             </label>\n//                             <button type='button' onClick={handleOrderSubmit}>\n//                                 Оформить заказ\n//                             </button>\n//                         </form>\n//                     </div>\n//                 </div>\n//             )}\n//         </div>\n//     );\n// };\n//\n// const ShowNothing = () => {\n//     return (\n//         <div className='empty'>\n//             <h2>Товаров нет!</h2>\n//         </div>\n//     );\n// };\n//\n// export default function Header(props) {\n//     const [cartOpen, setCartOpen] = useState(false);\n//     const [aboutOpen, setAboutOpen] = useState(false);\n//     const [contactOpen, setContactOpen] = useState(false);\n//     const [buyFormVisible, setBuyFormVisible] = useState(false);\n//\n//     const onCloseAbout = () => {\n//         setAboutOpen(false);\n//     };\n//\n//     const onCloseContact = () => {\n//         setContactOpen(false);\n//     };\n//\n//     const onBuy = () => {\n//         setBuyFormVisible(true);\n//     };\n//\n//     const onCloseBuyForm = () => {\n//         setBuyFormVisible(false);\n//     };\n//\n//     return (\n//         <header>\n//             <div>\n//                 <span className='logo'>AIVIDEON</span>\n//                 <ul className='nav'>\n//                     <li>\n//                         <Link to='/about'>About</Link>\n//                     </li>\n//                     <li>\n//                         <Link to='/contacts'>Contacts</Link>\n//                     </li>\n//                     <li>Cabinet</li>\n//                 </ul>\n//                 <FaShopify\n//                     onClick={() => setCartOpen((cartOpen) => !cartOpen)}\n//                     className={`shop-cart-button ${cartOpen && 'active'}`}\n//                 />\n//                 {cartOpen && (\n//                     <div className='shop-cart'>\n//                         {props.orders.length > 0 ? (\n//                             <ShowOrders\n//                                 orders={props.orders}\n//                                 onDelete={props.onDelete}\n//                                 onBuy={onBuy}\n//                                 buyFormVisible={buyFormVisible}\n//                                 onCloseBuyForm={onCloseBuyForm}\n//                             />\n//                         ) : (\n//                             <ShowNothing />\n//                         )}\n//                     </div>\n//                 )}\n//\n//                 {aboutOpen && <About onClose={onCloseAbout} orders={props.orders} onDelete={props.onDelete} />}\n//\n//                 {contactOpen && <Contacts onClose={onCloseContact} orders={props.orders} onDelete={props.onDelete} />}\n//             </div>\n//             <div className='presentation'></div>\n//         </header>\n//     );\n// }\n\nimport React, { useState } from 'react';\nimport { FaShopify } from 'react-icons/fa';\nimport { Link } from 'react-router-dom';\nimport Order from './Order';\nimport About from './About';\nimport Contacts from './Contacts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ShowOrders = props => {\n  _s();\n  const [formData, setFormData] = useState({\n    firstName: '',\n    lastName: '',\n    contactNumber: '',\n    email: '',\n    paymentMethod: 'creditCard' // По умолчанию выбрана кредитная карта\n  });\n  const [formErrors, setFormErrors] = useState({\n    firstName: '',\n    lastName: '',\n    contactNumber: '',\n    email: ''\n  });\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData({\n      ...formData,\n      [name]: value\n    });\n    // Очищаем сообщение об ошибке при изменении значения поля\n    setFormErrors({\n      ...formErrors,\n      [name]: ''\n    });\n  };\n  const handlePaymentMethodChange = e => {\n    setFormData({\n      ...formData,\n      paymentMethod: e.target.value\n    });\n  };\n  const validateForm = () => {\n    let isValid = true;\n    const newErrors = {};\n\n    // Производим валидацию полей\n    if (!formData.firstName.trim()) {\n      newErrors.firstName = 'Введите имя';\n      isValid = false;\n    }\n    if (!formData.lastName.trim()) {\n      newErrors.lastName = 'Введите фамилию';\n      isValid = false;\n    }\n    if (!formData.contactNumber.trim()) {\n      newErrors.contactNumber = 'Введите контактный номер';\n      isValid = false;\n    }\n    if (!formData.email.trim()) {\n      newErrors.email = 'Введите почту';\n      isValid = false;\n    }\n    setFormErrors(newErrors);\n    return isValid;\n  };\n  const handleOrderSubmit = () => {\n    // Валидация формы перед отправкой заказа\n    if (!validateForm()) {\n      // Выводим сообщение об ошибке или что-то еще\n      return;\n    }\n\n    // Здесь вы можете добавить логику для отправки заказа на сервер\n    // Например, вызов функции API для обработки заказа\n    // После успешной отправки, вы можете показать модальное окно с сообщением об успешном заказе\n    alert('Заказ успешно оформлен. Ожидайте обратной связи от менеджера!');\n    props.onCloseBuyForm();\n\n    // Очистите корзину после успешной покупки\n    props.onClearCart();\n  };\n  let summa = 0;\n  props.orders.forEach(el => summa += Number.parseFloat(el.price));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [props.orders.map(el => /*#__PURE__*/_jsxDEV(Order, {\n      onDelete: props.onDelete,\n      item: el\n    }, el.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 17\n    }, this)), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"summa\",\n      children: [\" \\u0421\\u0443\\u043C\\u043C\\u0430: \", new Intl.NumberFormat().format(summa), \"$ \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"buy-button\",\n      onClick: props.onBuy,\n      children: \"\\u041A\\u0443\\u043F\\u0438\\u0442\\u044C\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 13\n    }, this), props.buyFormVisible && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"about\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"close-icon\",\n          onClick: props.onCloseBuyForm,\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"\\u0424\\u043E\\u0440\\u043C\\u0430 \\u043F\\u043E\\u043A\\u0443\\u043F\\u043A\\u0438 \\u0437\\u0430\\u043A\\u0430\\u0437\\u0430\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"\\u0418\\u043C\\u044F:\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"firstName\",\n              value: formData.firstName,\n              onChange: handleInputChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 265,\n              columnNumber: 33\n            }, this), formErrors.firstName && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"error\",\n              children: formErrors.firstName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 266,\n              columnNumber: 58\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"\\u0424\\u0430\\u043C\\u0438\\u043B\\u0438\\u044F:\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"lastName\",\n              value: formData.lastName,\n              onChange: handleInputChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 270,\n              columnNumber: 33\n            }, this), formErrors.lastName && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"error\",\n              children: formErrors.lastName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 271,\n              columnNumber: 57\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"\\u041A\\u043E\\u043D\\u0442\\u0430\\u043A\\u0442\\u043D\\u044B\\u0439 \\u043D\\u043E\\u043C\\u0435\\u0440:\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"contactNumber\",\n              value: formData.contactNumber,\n              onChange: handleInputChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 275,\n              columnNumber: 33\n            }, this), formErrors.contactNumber && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"error\",\n              children: formErrors.contactNumber\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 276,\n              columnNumber: 62\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 273,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"\\u041F\\u043E\\u0447\\u0442\\u0430:\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"email\",\n              name: \"email\",\n              value: formData.email,\n              onChange: handleInputChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 280,\n              columnNumber: 33\n            }, this), formErrors.email && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"error\",\n              children: formErrors.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 281,\n              columnNumber: 54\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 278,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"\\u0412\\u0438\\u0434 \\u043E\\u043F\\u043B\\u0430\\u0442\\u044B:\", /*#__PURE__*/_jsxDEV(\"select\", {\n              name: \"paymentMethod\",\n              value: formData.paymentMethod,\n              onChange: handlePaymentMethodChange,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"creditCard\",\n                children: \"\\u041A\\u0440\\u0435\\u0434\\u0438\\u0442\\u043D\\u0430\\u044F \\u043A\\u0430\\u0440\\u0442\\u0430\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 286,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"paypal\",\n                children: \"PayPal\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 287,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"kaspi\",\n                children: \"Kaspi\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 288,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"qiwi\",\n                children: \"QIWI\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 289,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"visa\",\n                children: \"VISA\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 290,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 285,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: handleOrderSubmit,\n            children: \"\\u041E\\u0444\\u043E\\u0440\\u043C\\u0438\\u0442\\u044C \\u0437\\u0430\\u043A\\u0430\\u0437\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 293,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 247,\n    columnNumber: 9\n  }, this);\n};\n_s(ShowOrders, \"PSODQGdbzDrrPVYAYThSezREsUY=\");\n_c = ShowOrders;\nconst ShowNothing = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"empty\",\n    children: /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\u0422\\u043E\\u0432\\u0430\\u0440\\u043E\\u0432 \\u043D\\u0435\\u0442!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 306,\n    columnNumber: 9\n  }, this);\n};\n_c2 = ShowNothing;\nconst Header = props => {\n  _s2();\n  const [cartOpen, setCartOpen] = useState(false);\n  const [aboutOpen, setAboutOpen] = useState(false);\n  const [contactOpen, setContactOpen] = useState(false);\n  const [buyFormVisible, setBuyFormVisible] = useState(false);\n  const onCloseAbout = () => {\n    setAboutOpen(false);\n  };\n  const onCloseContact = () => {\n    setContactOpen(false);\n  };\n  const onBuy = () => {\n    setBuyFormVisible(true);\n  };\n  const onCloseBuyForm = () => {\n    setBuyFormVisible(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"header\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"logo\",\n        children: \"AIVIDEON\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 337,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"nav\",\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/about\",\n            children: \"About\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 340,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 339,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/contacts\",\n            children: \"Contacts\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 343,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 342,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Cabinet\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 345,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 338,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FaShopify, {\n        onClick: () => setCartOpen(cartOpen => !cartOpen),\n        className: `shop-cart-button ${cartOpen && 'active'}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 347,\n        columnNumber: 17\n      }, this), cartOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"shop-cart\",\n        children: props.orders.length > 0 ? /*#__PURE__*/_jsxDEV(ShowOrders, {\n          orders: props.orders,\n          onDelete: props.onDelete,\n          onBuy: onBuy,\n          buyFormVisible: buyFormVisible,\n          onCloseBuyForm: onCloseBuyForm,\n          onClearCart: props.onClearCart\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 354,\n          columnNumber: 29\n        }, this) : /*#__PURE__*/_jsxDEV(ShowNothing, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 363,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 352,\n        columnNumber: 21\n      }, this), aboutOpen && /*#__PURE__*/_jsxDEV(About, {\n        onClose: onCloseAbout,\n        orders: props.orders,\n        onDelete: props.onDelete\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 368,\n        columnNumber: 31\n      }, this), contactOpen && /*#__PURE__*/_jsxDEV(Contacts, {\n        onClose: onCloseContact,\n        orders: props.orders,\n        onDelete: props.onDelete\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 370,\n        columnNumber: 33\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 336,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"presentation\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 372,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 335,\n    columnNumber: 9\n  }, this);\n};\n_s2(Header, \"qxs6n6xUnYQLIF65s579zJDscIM=\");\n_c3 = Header;\nexport default Header;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"ShowOrders\");\n$RefreshReg$(_c2, \"ShowNothing\");\n$RefreshReg$(_c3, \"Header\");","map":{"version":3,"names":["React","useState","FaShopify","Link","Order","About","Contacts","jsxDEV","_jsxDEV","ShowOrders","props","_s","formData","setFormData","firstName","lastName","contactNumber","email","paymentMethod","formErrors","setFormErrors","handleInputChange","e","name","value","target","handlePaymentMethodChange","validateForm","isValid","newErrors","trim","handleOrderSubmit","alert","onCloseBuyForm","onClearCart","summa","orders","forEach","el","Number","parseFloat","price","children","map","onDelete","item","id","fileName","_jsxFileName","lineNumber","columnNumber","className","Intl","NumberFormat","format","onClick","onBuy","buyFormVisible","type","onChange","_c","ShowNothing","_c2","Header","_s2","cartOpen","setCartOpen","aboutOpen","setAboutOpen","contactOpen","setContactOpen","setBuyFormVisible","onCloseAbout","onCloseContact","to","length","onClose","_c3","$RefreshReg$"],"sources":["D:/Desktop/cameras-shop/src/components/Header.js"],"sourcesContent":["// import React, { useState } from 'react';\r\n// import { FaShopify } from 'react-icons/fa';\r\n// import { Link } from 'react-router-dom';\r\n// import Order from './Order';\r\n// import About from './About';\r\n// import Contacts from './Contacts';\r\n//\r\n// const ShowOrders = (props) => {\r\n//     const [formData, setFormData] = useState({\r\n//         firstName: '',\r\n//         lastName: '',\r\n//         contactNumber: '',\r\n//         email: '',\r\n//         paymentMethod: 'creditCard', // По умолчанию выбрана кредитная карта\r\n//     });\r\n//\r\n//\r\n//     const handleInputChange = (e) => {\r\n//         const { name, value } = e.target;\r\n//         setFormData({ ...formData, [name]: value });\r\n//     };\r\n//\r\n//     const handlePaymentMethodChange = (e) => {\r\n//         setFormData({ ...formData, paymentMethod: e.target.value });\r\n//     };\r\n//\r\n//     const handleOrderSubmit = () => {\r\n//         // Здесь вы можете добавить логику для отправки заказа на сервер\r\n//         // Например, вызов функции API для обработки заказа\r\n//         // После успешной отправки, вы можете показать модальное окно с сообщением об успешном заказе\r\n//         alert('Заказ успешно оформлен. Ожидайте обратной связи от менеджера!');\r\n//         props.onCloseBuyForm();\r\n//     };\r\n//\r\n//     let summa = 0;\r\n//     props.orders.forEach((el) => (summa += Number.parseFloat(el.price)));\r\n//     return (\r\n//         <div>\r\n//             {props.orders.map((el) => (\r\n//                 <Order onDelete={props.onDelete} key={el.id} item={el} />\r\n//             ))}\r\n//             <p className='summa'> Сумма: {new Intl.NumberFormat().format(summa)}$ </p>\r\n//             <button className='buy-button' onClick={props.onBuy}>\r\n//                 Купить\r\n//             </button>\r\n//             {props.buyFormVisible && (\r\n//                 <div className='about'>\r\n//                     <div>\r\n//             <span className='close-icon' onClick={props.onCloseBuyForm}>\r\n//               &times;\r\n//             </span>\r\n//                         <h2>Форма покупки заказа</h2>\r\n//                         <form>\r\n//                             <label>\r\n//                                 Имя:\r\n//                                 <input type='text' name='firstName' value={formData.firstName} onChange={handleInputChange} />\r\n//                             </label>\r\n//                             <label>\r\n//                                 Фамилия:\r\n//                                 <input type='text' name='lastName' value={formData.lastName} onChange={handleInputChange} />\r\n//                             </label>\r\n//                             <label>\r\n//                                 Контактный номер:\r\n//                                 <input type='text' name='contactNumber' value={formData.contactNumber} onChange={handleInputChange} />\r\n//                             </label>\r\n//                             <label>\r\n//                                 Почта:\r\n//                                 <input type='email' name='email' value={formData.email} onChange={handleInputChange} />\r\n//                             </label>\r\n//                             <label>\r\n//                                 Вид оплаты:\r\n//                                 <select name='paymentMethod' value={formData.paymentMethod} onChange={handlePaymentMethodChange}>\r\n//                                     <option value='creditCard'>Кредитная карта</option>\r\n//                                     <option value='paypal'>PayPal</option>\r\n//                                     <option value='kaspi'>Kaspi</option>\r\n//                                     <option value='qiwi'>QIWI</option>\r\n//                                     <option value='visa'>VISA</option>\r\n//                                 </select>\r\n//                             </label>\r\n//                             <button type='button' onClick={handleOrderSubmit}>\r\n//                                 Оформить заказ\r\n//                             </button>\r\n//                         </form>\r\n//                     </div>\r\n//                 </div>\r\n//             )}\r\n//         </div>\r\n//     );\r\n// };\r\n//\r\n// const ShowNothing = () => {\r\n//     return (\r\n//         <div className='empty'>\r\n//             <h2>Товаров нет!</h2>\r\n//         </div>\r\n//     );\r\n// };\r\n//\r\n// export default function Header(props) {\r\n//     const [cartOpen, setCartOpen] = useState(false);\r\n//     const [aboutOpen, setAboutOpen] = useState(false);\r\n//     const [contactOpen, setContactOpen] = useState(false);\r\n//     const [buyFormVisible, setBuyFormVisible] = useState(false);\r\n//\r\n//     const onCloseAbout = () => {\r\n//         setAboutOpen(false);\r\n//     };\r\n//\r\n//     const onCloseContact = () => {\r\n//         setContactOpen(false);\r\n//     };\r\n//\r\n//     const onBuy = () => {\r\n//         setBuyFormVisible(true);\r\n//     };\r\n//\r\n//     const onCloseBuyForm = () => {\r\n//         setBuyFormVisible(false);\r\n//     };\r\n//\r\n//     return (\r\n//         <header>\r\n//             <div>\r\n//                 <span className='logo'>AIVIDEON</span>\r\n//                 <ul className='nav'>\r\n//                     <li>\r\n//                         <Link to='/about'>About</Link>\r\n//                     </li>\r\n//                     <li>\r\n//                         <Link to='/contacts'>Contacts</Link>\r\n//                     </li>\r\n//                     <li>Cabinet</li>\r\n//                 </ul>\r\n//                 <FaShopify\r\n//                     onClick={() => setCartOpen((cartOpen) => !cartOpen)}\r\n//                     className={`shop-cart-button ${cartOpen && 'active'}`}\r\n//                 />\r\n//                 {cartOpen && (\r\n//                     <div className='shop-cart'>\r\n//                         {props.orders.length > 0 ? (\r\n//                             <ShowOrders\r\n//                                 orders={props.orders}\r\n//                                 onDelete={props.onDelete}\r\n//                                 onBuy={onBuy}\r\n//                                 buyFormVisible={buyFormVisible}\r\n//                                 onCloseBuyForm={onCloseBuyForm}\r\n//                             />\r\n//                         ) : (\r\n//                             <ShowNothing />\r\n//                         )}\r\n//                     </div>\r\n//                 )}\r\n//\r\n//                 {aboutOpen && <About onClose={onCloseAbout} orders={props.orders} onDelete={props.onDelete} />}\r\n//\r\n//                 {contactOpen && <Contacts onClose={onCloseContact} orders={props.orders} onDelete={props.onDelete} />}\r\n//             </div>\r\n//             <div className='presentation'></div>\r\n//         </header>\r\n//     );\r\n// }\r\n\r\nimport React, { useState } from 'react';\r\nimport { FaShopify } from 'react-icons/fa';\r\nimport { Link } from 'react-router-dom';\r\nimport Order from './Order';\r\nimport About from './About';\r\nimport Contacts from './Contacts';\r\n\r\nconst ShowOrders = (props) => {\r\n    const [formData, setFormData] = useState({\r\n        firstName: '',\r\n        lastName: '',\r\n        contactNumber: '',\r\n        email: '',\r\n        paymentMethod: 'creditCard', // По умолчанию выбрана кредитная карта\r\n    });\r\n\r\n    const [formErrors, setFormErrors] = useState({\r\n        firstName: '',\r\n        lastName: '',\r\n        contactNumber: '',\r\n        email: '',\r\n    });\r\n\r\n    const handleInputChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setFormData({ ...formData, [name]: value });\r\n        // Очищаем сообщение об ошибке при изменении значения поля\r\n        setFormErrors({ ...formErrors, [name]: '' });\r\n    };\r\n\r\n    const handlePaymentMethodChange = (e) => {\r\n        setFormData({ ...formData, paymentMethod: e.target.value });\r\n    };\r\n\r\n    const validateForm = () => {\r\n        let isValid = true;\r\n        const newErrors = {};\r\n\r\n        // Производим валидацию полей\r\n        if (!formData.firstName.trim()) {\r\n            newErrors.firstName = 'Введите имя';\r\n            isValid = false;\r\n        }\r\n\r\n        if (!formData.lastName.trim()) {\r\n            newErrors.lastName = 'Введите фамилию';\r\n            isValid = false;\r\n        }\r\n\r\n        if (!formData.contactNumber.trim()) {\r\n            newErrors.contactNumber = 'Введите контактный номер';\r\n            isValid = false;\r\n        }\r\n\r\n        if (!formData.email.trim()) {\r\n            newErrors.email = 'Введите почту';\r\n            isValid = false;\r\n        }\r\n\r\n        setFormErrors(newErrors);\r\n\r\n        return isValid;\r\n    };\r\n\r\n    const handleOrderSubmit = () => {\r\n        // Валидация формы перед отправкой заказа\r\n        if (!validateForm()) {\r\n            // Выводим сообщение об ошибке или что-то еще\r\n            return;\r\n        }\r\n\r\n        // Здесь вы можете добавить логику для отправки заказа на сервер\r\n        // Например, вызов функции API для обработки заказа\r\n        // После успешной отправки, вы можете показать модальное окно с сообщением об успешном заказе\r\n        alert('Заказ успешно оформлен. Ожидайте обратной связи от менеджера!');\r\n        props.onCloseBuyForm();\r\n\r\n        // Очистите корзину после успешной покупки\r\n        props.onClearCart();\r\n    };\r\n\r\n    let summa = 0;\r\n    props.orders.forEach((el) => (summa += Number.parseFloat(el.price)));\r\n    return (\r\n        <div>\r\n            {props.orders.map((el) => (\r\n                <Order onDelete={props.onDelete} key={el.id} item={el} />\r\n            ))}\r\n            <p className='summa'> Сумма: {new Intl.NumberFormat().format(summa)}$ </p>\r\n            <button className='buy-button' onClick={props.onBuy}>\r\n                Купить\r\n            </button>\r\n            {props.buyFormVisible && (\r\n                <div className='about'>\r\n                    <div>\r\n                        <span className='close-icon' onClick={props.onCloseBuyForm}>\r\n                            &times;\r\n                        </span>\r\n                        <h2>Форма покупки заказа</h2>\r\n                        <form>\r\n                            <label>\r\n                                Имя:\r\n                                <input type='text' name='firstName' value={formData.firstName} onChange={handleInputChange} />\r\n                                {formErrors.firstName && <span className='error'>{formErrors.firstName}</span>}\r\n                            </label>\r\n                            <label>\r\n                                Фамилия:\r\n                                <input type='text' name='lastName' value={formData.lastName} onChange={handleInputChange} />\r\n                                {formErrors.lastName && <span className='error'>{formErrors.lastName}</span>}\r\n                            </label>\r\n                            <label>\r\n                                Контактный номер:\r\n                                <input type='text' name='contactNumber' value={formData.contactNumber} onChange={handleInputChange} />\r\n                                {formErrors.contactNumber && <span className='error'>{formErrors.contactNumber}</span>}\r\n                            </label>\r\n                            <label>\r\n                                Почта:\r\n                                <input type='email' name='email' value={formData.email} onChange={handleInputChange} />\r\n                                {formErrors.email && <span className='error'>{formErrors.email}</span>}\r\n                            </label>\r\n                            <label>\r\n                                Вид оплаты:\r\n                                <select name='paymentMethod' value={formData.paymentMethod} onChange={handlePaymentMethodChange}>\r\n                                    <option value='creditCard'>Кредитная карта</option>\r\n                                    <option value='paypal'>PayPal</option>\r\n                                    <option value='kaspi'>Kaspi</option>\r\n                                    <option value='qiwi'>QIWI</option>\r\n                                    <option value='visa'>VISA</option>\r\n                                </select>\r\n                            </label>\r\n                            <button type='button' onClick={handleOrderSubmit}>\r\n                                Оформить заказ\r\n                            </button>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nconst ShowNothing = () => {\r\n    return (\r\n        <div className='empty'>\r\n            <h2>Товаров нет!</h2>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst Header = (props) => {\r\n    const [cartOpen, setCartOpen] = useState(false);\r\n    const [aboutOpen, setAboutOpen] = useState(false);\r\n    const [contactOpen, setContactOpen] = useState(false);\r\n    const [buyFormVisible, setBuyFormVisible] = useState(false);\r\n\r\n    const onCloseAbout = () => {\r\n        setAboutOpen(false);\r\n    };\r\n\r\n    const onCloseContact = () => {\r\n        setContactOpen(false);\r\n    };\r\n\r\n    const onBuy = () => {\r\n        setBuyFormVisible(true);\r\n    };\r\n\r\n    const onCloseBuyForm = () => {\r\n        setBuyFormVisible(false);\r\n    };\r\n\r\n    return (\r\n        <header>\r\n            <div>\r\n                <span className='logo'>AIVIDEON</span>\r\n                <ul className='nav'>\r\n                    <li>\r\n                        <Link to='/about'>About</Link>\r\n                    </li>\r\n                    <li>\r\n                        <Link to='/contacts'>Contacts</Link>\r\n                    </li>\r\n                    <li>Cabinet</li>\r\n                </ul>\r\n                <FaShopify\r\n                    onClick={() => setCartOpen((cartOpen) => !cartOpen)}\r\n                    className={`shop-cart-button ${cartOpen && 'active'}`}\r\n                />\r\n                {cartOpen && (\r\n                    <div className='shop-cart'>\r\n                        {props.orders.length > 0 ? (\r\n                            <ShowOrders\r\n                                orders={props.orders}\r\n                                onDelete={props.onDelete}\r\n                                onBuy={onBuy}\r\n                                buyFormVisible={buyFormVisible}\r\n                                onCloseBuyForm={onCloseBuyForm}\r\n                                onClearCart={props.onClearCart}\r\n                            />\r\n                        ) : (\r\n                            <ShowNothing />\r\n                        )}\r\n                    </div>\r\n                )}\r\n\r\n                {aboutOpen && <About onClose={onCloseAbout} orders={props.orders} onDelete={props.onDelete} />}\r\n\r\n                {contactOpen && <Contacts onClose={onCloseContact} orders={props.orders} onDelete={props.onDelete} />}\r\n            </div>\r\n            <div className='presentation'></div>\r\n        </header>\r\n    );\r\n};\r\n\r\nexport default Header;\r\n"],"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}